;------------------------------------------------------------------------
;TARGETとPLAYERによるコマンドの擬似実行。
;ARGにSELECTCOM、ARG:1に行う予定回数を代入しておく。
;TCVAR:300〜599を記録用に用いる。現在は539まで使用中
;複数プレイはとりあえずPLAYER１人＆TARGET３人まで
;------------------------------------------------------------------------
@SIMULATE_TRAIN, ARG, ARG:1
#DIM MEMO_TARGET, 3

TRYCALLFORM COM_ABLE{ARG}
SIF RESULT == 0
	RETURN 0

;参加しないTARGET:0〜を初期化する操作があるので、念のため記憶しておく
MEMO_TARGET = TARGET
MEMO_TARGET:1 = TARGET:1
MEMO_TARGET:2 = TARGET:2

;お互いのPALAM、EXP、EX、JUEL、BASEを記録(後で増加分を算出する)
CALL SIMULATE_TRAIN_FIRST
;コマンドの擬似実行
CALL SIMULATE_TRAIN_COM, ARG, ARG:1
;経験や珠などの獲得量計算
CALL SIMULATE_TRAIN_CALC
;結果発表
CALL SIMULATE_TRAIN_SHOW

;TARGET = MEMO_TARGET
;TARGET:1 = MEMO_TARGET:1
;TARGET:2 = MEMO_TARGET:2

;ARGにはプレイヤー以外の人の人数。例えば３Ｐする場合にはARGを２にする。１は省略可能
@SIMULATE_TRAIN_FIRST, ARG
#DIM LCOUNT
SIF ARG <= 1
	ARG = 1

PREVCOM = -1

VARSET TARGET, 0, ARG, 9

CALL SIMULATE_TRAIN_FIRST_SET, PLAYER
FOR LCOUNT, 0, 9
	SIF TARGET:LCOUNT > 0
		CALL SIMULATE_TRAIN_FIRST_SET, TARGET:LCOUNT
NEXT


@SIMULATE_TRAIN_FIRST_SET, ARG
#DIM LCOUNT

;TCVAR:300〜399はEXP
FOR LCOUNT, 0, 100
	TCVAR:ARG:(LCOUNT + 300) = EXP:ARG:LCOUNT
NEXT
;TCVAR:400〜429はJUEL
FOR LCOUNT, 0, 30
	TCVAR:ARG:(LCOUNT + 400) = JUEL:ARG:LCOUNT
NEXT
;TCVAR:430〜459はPALAM
FOR LCOUNT, 0, 30
	TCVAR:ARG:(LCOUNT + 430) = PALAM:ARG:LCOUNT
NEXT
;TCVAR:460〜519はEX
FOR LCOUNT, 0, 60
	TCVAR:ARG:(LCOUNT + 460) = EX:ARG:LCOUNT
NEXT
;TCVAR:520〜539はBASE
FOR LCOUNT, 0, 20
	TCVAR:ARG:(LCOUNT + 520) = BASE:ARG:LCOUNT
NEXT

;Ｖ潤、Ａ潤、恭順、欲情のPALAMは少なすぎると支障が出るので底上げ
PALAM:ARG:Ｖ潤 += 3000
PALAM:ARG:Ａ潤 += 3000
PALAM:ARG:恭順 += 3000
PALAM:ARG:欲情 += 3000

;絶頂射精ゲージ初期化
CVARSET BASE, GETNUM(BASE, "絶頂")

@SIMULATE_TRAIN_CALC
#DIM LCOUNT

CALL SIMULATE_TRAIN_CALC_SET, PLAYER
FOR LCOUNT, 0, 9
	SIF TARGET:LCOUNT > 0
		CALL SIMULATE_TRAIN_CALC_SET, TARGET:LCOUNT
NEXT

@SIMULATE_TRAIN_CALC_SET, ARG
#DIM LCOUNT
;Ｖ潤、Ａ潤、恭順、欲情の底上げ終了
PALAM:ARG:Ｖ潤 -= 3000
PALAM:ARG:Ａ潤 -= 3000
PALAM:ARG:恭順 -= 3000
PALAM:ARG:欲情 -= 3000

;PLAYERがMASTERでないときには一部の経験の増加量を減らす
IF ARG == TARGET && PLAYER != MASTER
	FOR LCOUNT, 0, 100
		SELECTCASE EXPNAME:LCOUNT
		;増加分を８割減
		CASE "奉仕快楽経験", "嗜虐快楽経験"
			EXP:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 300) + (EXP:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 300) )/5
		ENDSELECT
	NEXT
ENDIF

;EXP関連の数値は出きった後なので表示の簡略化のため値を増分に書き換える
FOR LCOUNT, 0, 100
	TCVAR:ARG:(LCOUNT + 300) = EXP:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 300)
NEXT

;以下でJUELの増加分を計算する（まずはPALAM、EX、JUELの増分を出す）
FOR LCOUNT, 0, 30
	PALAM:ARG:LCOUNT = MAX(PALAM:ARG:LCOUNT - TCVAR:ARG:(LCOUNT + 430), 0)
NEXT
FOR LCOUNT, 0, 60
	EX:ARG:LCOUNT -= TCVAR:ARG:(LCOUNT + 460)
NEXT

;JUEL増加量の算出(通常の25%程度)
FOR LCOUNT, 0, 16
	SIF ARG == MASTER
		BREAK

	SELECTCASE PALAMNAME:LCOUNT
	CASE "", "恐怖", "反感"
		CONTINUE
	CASEELSE
		GOTJUEL:LCOUNT = MULTIPLY(GET_JUEL(LCOUNT, ARG), 25)

		;相手がMASTERでないなら獲得量を減らす
		SELECTCASE PLAYER
		CASE MASTER
		CASE ASSI
			GOTJUEL:LCOUNT /= 2
		CASEELSE
			GOTJUEL:LCOUNT /= 4
		ENDSELECT

		SIF GOTJUEL:LCOUNT < 50
			GOTJUEL:LCOUNT = 0
		JUEL:ARG:LCOUNT += GOTJUEL:LCOUNT

		;数値が出きった後なので表示の簡略化のため値を増分に書き換える
		TCVAR:ARG:(LCOUNT + 400) = GOTJUEL:LCOUNT
	ENDSELECT
NEXT
;絶頂ボーナスはここでリセット
JUEL:ARG:快Ｃボーナス = 0
JUEL:ARG:快Ｖボーナス = 0
JUEL:ARG:快Ａボーナス = 0
JUEL:ARG:快Ｂボーナス = 0
JUEL:ARG:快Ｍボーナス = 0
JUEL:ARG:快尿ボーナス = 0

;増加したPALAM、EXはJUELに変えたので、元の値に戻す
FOR LCOUNT, 0, 30
	PALAM:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 430)
NEXT
FOR LCOUNT, 0, 60
	EX:ARG:LCOUNT = TCVAR:ARG:(LCOUNT + 460)
NEXT

;------------------------------------------------------------------------
;ARGにはTARGET側の表示経験、ARG:1にはPLAYER側の表示経験の番号を入れる
;ただし、PLAYER < 0 もありうるので注意
;経験名で指定したいところだが、TCVARが番号で記録しているので速度重視で番号で指定する
;------------------------------------------------------------------------
@PRINT_SIMULATE_TRAIN, ARG, ARG:1
#DIM LCOUNT
;PLAYERとTARGETを同時に処理する
#DIM ACTOR, 4
#DIM EXP_ADD, 4

ACTOR = TARGET
ACTOR:1 = TARGET:1
ACTOR:2 = TARGET:2
ACTOR:3 = PLAYER

;それぞれ参照するものが長すぎるので代入
VARSET EXP_ADD

FOR LCOUNT, 0, 3
	SIF ACTOR:LCOUNT > 0
		EXP_ADD:LCOUNT = TCVAR:(ACTOR:LCOUNT):(ARG + 300)
NEXT
SIF PLAYER > 0
	EXP_ADD:3 = TCVAR:PLAYER:(ARG:1 + 300)

SIF EXP_ADD + EXP_ADD:1 + EXP_ADD:2 + EXP_ADD:3 == 0
	RETURN 0

SIF TARGET:1 == 0
	PRINTFORM 　　　　　

FOR LCOUNT, 0, 4
	SIF ACTOR:LCOUNT <= 0
		CONTINUE

	IF EXP_ADD:LCOUNT > 0
		;PLAYERの時には経験の表示が異なる
		IF LCOUNT == 3
			LOCALS = %TEXT_RJ(EXPNAME:(ARG:1), 13)%＋{EXP_ADD:LCOUNT, 3}
		ELSE
			LOCALS = %TEXT_RJ(EXPNAME:ARG, 13)%＋{EXP_ADD:LCOUNT, 3}
		ENDIF
		PRINTFORM %TEXT_LJ(LOCALS, 19)%
	ELSE
		PRINTFORM %BL(19)%
	ENDIF
NEXT

PRINTL 


;PLAYERがいない場合も考慮する
@SIMULATE_TRAIN_SHOW
#DIM LCOUNT
#DIM LCOUNT2
;PLAYERとTARGETを同時に処理する
#DIM ACTOR, 4
#DIM JUEL_ADD, 4
;経験値を得ているかを記録
#DIM IS_EXP_ADD, 4

PRINTL 

;PLAYERの精力の減少量を表示
IF PLAYER > 0 && BASE:PLAYER:精力 != TCVAR:PLAYER:BASE_精力
	PRINTFORM %CALLNAME:PLAYER%の精力:({TCVAR:PLAYER:BASE_精力}/{MAXBASE:PLAYER:精力}) → ({BASE:PLAYER:精力}/{MAXBASE:PLAYER:精力})
	SIF PLAYER > 0 && BASE:PLAYER:魂 != TCVAR:PLAYER:BASE_魂
		PRINTFORM 　%CALLNAME:PLAYER%の魂:%TEXTS("0.01", TCVAR:PLAYER:BASE_魂)% → %TEXTS("0.01", BASE:PLAYER:魂)%
	PRINTL 
ENDIF

ACTOR = TARGET
ACTOR:1 = TARGET:1
ACTOR:2 = TARGET:2
ACTOR:3 = PLAYER

;経験に変動があったキャラを表示するのでチェック
VARSET IS_EXP_ADD

FOR LCOUNT2, 0, 4
	SIF ACTOR:LCOUNT2 <= 0
		CONTINUE

	FOR LCOUNT, 0, 100
		SIF TCVAR:(ACTOR:LCOUNT2):(LCOUNT + 300) == 0
			CONTINUE

		IS_EXP_ADD:LCOUNT2 = 1
		BREAK
	NEXT
NEXT

;誰も経験変動ないなら終わり
SIF IS_EXP_ADD:0 + IS_EXP_ADD:1 + IS_EXP_ADD:2 + IS_EXP_ADD:3 == 0
	RETURN 0

;名前出力
SIF ACTOR:1 == 0
	PRINTFORM 　　　　　

FOR LCOUNT, 0, 4
	SIF ACTOR:LCOUNT <= 0
		CONTINUE

	IF IS_EXP_ADD:LCOUNT
		LOCALS = [%CALLNAME:(ACTOR:LCOUNT)%]
		PRINTFORM %TEXT_LJ(TEXT_RJ(LOCALS, 14), 19)%
	ELSE
		PRINTFORM %BL(19)%
	ENDIF
NEXT
PRINTL 

;絶頂経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "絶頂経験"), GETNUM(EXP, "絶頂経験")
;童貞狩り経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "童貞狩り経験"), GETNUM(EXP, "童貞狩り経験")
;精液経験＆射精経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "精液経験"), GETNUM(EXP, "射精経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "射精経験"), GETNUM(EXP, "精液経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "膣内精液経験"), GETNUM(EXP, "膣内精液経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "肛内精液経験"), GETNUM(EXP, "肛内精液経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "精飲経験"), GETNUM(EXP, "精飲経験")
;噴乳経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "噴乳経験"), GETNUM(EXP, "噴乳経験")
;ＶＡ尿道経験＆ＶＡ尿道拡張経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ｖ経験"), GETNUM(EXP, "Ｖ経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ｖ拡張経験"), GETNUM(EXP, "Ｖ拡張経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ｖフィスト経験"), -1
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ａ経験"), GETNUM(EXP, "Ａ経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ａ拡張経験"), GETNUM(EXP, "Ａ拡張経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ａフィスト経験"), -1
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "尿道経験"), GETNUM(EXP, "尿道経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "尿道拡張経験"), GETNUM(EXP, "尿道拡張経験")
;キス経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "キス経験"), GETNUM(EXP, "キス経験")
;性交経験＆挿入経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ｖ性交経験"), GETNUM(EXP, "Ｖ挿入経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "ゴム性交経験"), GETNUM(EXP, "ゴム挿入経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ｖ挿入経験"), GETNUM(EXP, "Ｖ性交経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "ゴム挿入経験"), GETNUM(EXP, "ゴム性交経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ａ性交経験"), GETNUM(EXP, "Ａ挿入経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "Ａ挿入経験"), GETNUM(EXP, "Ａ性交経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "尿道性交経験"), GETNUM(EXP, "尿道挿入経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "尿道挿入経験"), GETNUM(EXP, "尿道性交経験")
;自慰経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "自慰経験"), GETNUM(EXP, "自慰経験")
;レズ、ＢＬ経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "レズ経験"), GETNUM(EXP, "レズ経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "ＢＬ経験"), GETNUM(EXP, "ＢＬ経験")
;被虐快楽経験＆嗜虐快楽経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "被虐快楽経験"), GETNUM(EXP, "嗜虐快楽経験")
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "嗜虐快楽経験"), GETNUM(EXP, "被虐快楽経験")
;奉仕快楽〜クンニ経験
FOR LCOUNT, 21, 29
	CALL PRINT_SIMULATE_TRAIN, LCOUNT, LCOUNT
NEXT
;喉性交経験
CALL PRINT_SIMULATE_TRAIN, GETNUM(EXP, "喉性交経験"), GETNUM(EXP, "喉性交経験")

;相手が一般人なら珠取得表示は無し
IF PLAYER < 0 || TALENT:PLAYER:一般人
	PRINTL 
	RETURN 0
ENDIF

;各種珠ＧＥＴ
FOR LCOUNT2, 0, 16

	SELECTCASE PALAMNAME:LCOUNT2
	CASE "", "恐怖", "反感"
		CONTINUE
	ENDSELECT

	VARSET JUEL_ADD
	FOR LCOUNT, 0, 4
		SIF ACTOR:LCOUNT > 0
			JUEL_ADD:LCOUNT = TCVAR:(ACTOR:LCOUNT):(LCOUNT2 + 400)
	NEXT

	SIF JUEL_ADD + JUEL_ADD:1 + JUEL_ADD:2 + JUEL_ADD:3 == 0
		CONTINUE

	SIF ACTOR:1 == 0
		PRINTFORM 　　　　　

	FOR LCOUNT, 0, 4
		SIF ACTOR:LCOUNT <= 0
			CONTINUE

		IF JUEL_ADD:LCOUNT
			LOCALS = %BL(3)% %PALAMNAME:LCOUNT2%の珠＋{JUEL_ADD:LCOUNT, 4}
			PRINTFORM %TEXT_LJ(LOCALS, 19)%
		ELSE
			PRINTFORM %BL(19)%
		ENDIF
	NEXT
	PRINTL 
NEXT

PRINTL 

;-------------------------------------------------
;コマンドARGを(ARG:1)回擬似的に計算する
;-------------------------------------------------
@SIMULATE_TRAIN_COM, ARG, ARG:1
#DIM LCOUNT
#DIM MEMO_MOOD
#DIM MEMO_SELECTCOM
#DIM MEMO_BASE0
#DIM MEMO_BASE1

SIF ARG:1 == 0
	RETURN 0

IF COND("調教中")
	TRYCALLFORM COM_ABLE{ARG}
	SIF RESULT == 0
		RETURN 0
ENDIF

;テキスト出力フラグと、ムードを弄る。
MEMO_MOOD = FLAG:ムード
MEMO_SELECTCOM = SELECTCOM

FLAG:ムード = MAX(FLAG:ムード, 100)
SIF COND("性欲解消実行中")
	FLAG:ムード = MAX(FLAG:ムード, 180)

SELECTCOM = ARG

;インサートフラグは解除
CVARSET TEQUIP, GETNUM(TEQUIP, "体位")
CVARSET TEQUIP, GETNUM(TEQUIP, "Ｖ挿入")
CVARSET TEQUIP, GETNUM(TEQUIP, "Ａ挿入")
CVARSET TEQUIP, GETNUM(TEQUIP, "尿道挿入")

CALL RESET_TFLAGS

;システム文スキップフラグON
TFLAG:システム文スキップ = 1

MEMO_BASE0 = BASE:体力
CALL SOURCE_CHECK_SIMPLE, SELECTCOM, 0, 100, ARG:1

;選択コマンドと実行値補正（やる気）の確認
;PRINTFORML TCVAR:やる気 = {TCVAR:やる気}, %TRAINNAME:SELECTCOM%

MEMO_BASE1 = BASE:PLAYER:精力
;PRINTFORML BASE:PLAYER:精力 = {BASE:PLAYER:精力}, BASE:PLAYER:絶頂 = {BASE:PLAYER:絶頂}, COND("絶頂", PLAYER) = {COND("絶頂", PLAYER)}
IF COND("絶頂", PLAYER)
	;PRINTFORMW COND("絶頂", PLAYER) = {COND("絶頂", PLAYER)}
	TCVAR:PLAYER:プレイ区分メイン = CALCF("絶頂の原因", TARGET, SELECTCOM)
	CALL CALC, "絶頂させた処理", TARGET

	CALL CALC, "絶頂した処理", PLAYER

	;精力減少控えめ
	BASE:PLAYER:精力 = MAX(MEMO_BASE1 - COND("絶頂", PLAYER)*2, 0)
ENDIF
;PRINTFORML EJAC = {EJAC:PLAYER}, 技巧 = {ABL:PLAYER:技巧}, TCVAR:1 = {TCVAR:PLAYER:絶頂度}

;体力の減少は少なめにする
BASE:体力 = MAX(MEMO_BASE0 - 20*ARG:1, 1)
;体力回復
SIF TALENT:吸精体質
	CALL CALC, "体力回復", COND("絶頂", PLAYER) * 10
;CUPをPALAMに移す
FOR LCOUNT, 0, 30
	PALAM:LCOUNT = MIN(PALAM_LV(16), PALAM:LCOUNT+CUP:LCOUNT-CDOWN:LCOUNT)
NEXT

;体力精力が減りすぎていた時の処理
BASE:体力 = MAX(BASE:体力, 1)
BASE:精力 = MAX(BASE:精力, 1)

BASE:PLAYER:体力 = MAX(BASE:PLAYER:体力, 1)
BASE:PLAYER:精力 = MAX(BASE:PLAYER:精力, 1)

FLAG:ムード = MEMO_MOOD
SELECTCOM = MEMO_SELECTCOM
;システム文スキップフラグOFF
TFLAG:システム文スキップ = 0

;-------------------------------------------------
;キャラARGが主要なコマンドを実行できるかを全部調べる
;-------------------------------------------------
@CHECK_COM_ABLE, ARG
#DIM LCOUNT
#DIM MEMO_TEQUIP30
#DIM MEMO_EQUIP1
#DIM MEMO_EQUIP1_PLAYER
#DIM MEMO_TARGET
#DIM MEMO_ITEM

;主に日常シーンなどで用いるため、ペニバン無しで判定する
MEMO_ITEM = ITEM:ペニバン
ITEM:ペニバン = 0

MEMO_TARGET = TARGET

TARGET = ARG
MEMO_TEQUIP30 = TEQUIP:押し倒し
MEMO_EQUIP1 = EQUIP:ステート変化
MEMO_EQUIP1_PLAYER = EQUIP:PLAYER:ステート変化

SIF PENIS(TARGET) == 0 && TALENT:具現
	CALL ADD_STATE, TARGET, "具現"
SIF PENIS(PLAYER) == 0 && TALENT:PLAYER:具現
	CALL ADD_STATE, PLAYER, "具現"

TEQUIP:押し倒し = 0
TFLAG:実行値ボーナス = 0
TCVAR:基本実行値 = 0
STR:実行値 = 

;Ｖ潤、Ａ潤は少なすぎると支障が出るので底上げ
PALAM:Ｖ潤 += 3000
PALAM:Ａ潤 += 3000

;初期化
CSTR:実行可能コマンド = /

FOR LCOUNT, 0, 200
	SELECTCASE LCOUNT
	;主要コマンドの選別
	CASE 1, 3 TO 6, 9, 10, 13, 14, 60, 61, 65 TO 68, 70, 71, 75, 80 TO 83, 90 TO 99, 104, 105, 120, 121, 122, 125 TO 127, 140 TO 144, 150
		SELECTCASE LCOUNT
		;条件が少々厳しいコマンド
		CASE 60 TO 69
			;コマンド実行済みでないと行わない
			SIF FIRSTCOMS("Ｖ挿入") == 0
				CONTINUE
			SIF COND("Ｖ熟達") == 0
				CONTINUE
		CASE 70 TO 79
			;コマンド実行済みでないと行わない
			SIF FIRSTCOMS("Ａ挿入") == 0
				CONTINUE
			SIF COND("Ａ熟達") == 0
				CONTINUE
		CASE 83 TO 88
			;コマンド実行済みでないと行わない
			SIF FIRSTCOMS("尿道挿入") == 0
				CONTINUE
			SIF COND("尿道熟達") == 0
				CONTINUE
		CASE 120 TO 124
			;コマンド実行済みでないと行わない
			SIF FIRSTCOMS("Ｖ逆挿入") == 0
				CONTINUE
		CASE 125 TO 129
			;コマンド実行済みでないと行わない
			SIF FIRSTCOMS("Ａ逆挿入") == 0
				CONTINUE
		CASEELSE
			;コマンド実行済みでないと行わない
			SIF FIRSTCOM(LCOUNT) == 0
				CONTINUE
		ENDSELECT

		RESULT = 0
		TRYCALLFORM COM_ABLE{LCOUNT}
		LOCAL = RESULT
		;PRINTFORM {LCOUNT}%TRAINNAME:LCOUNT%, 
		;CALL SHOW_COM_ORDER_COM, LCOUNT
		;PRINTFORML RESULT = {LOCAL}
		RESULT = LOCAL
		SIF RESULT
			CSTR:実行可能コマンド = %CSTR:実行可能コマンド%%TRAINNAME:LCOUNT%/

		SELECTCASE LCOUNT
		;押し倒し状態も見る
		CASE 1, 4, 6, 9, 65, 75, 88, 90 TO 99, 120, 126, 150
			TEQUIP:押し倒し = 1
			RESULT = 0
			TRYCALLFORM COM_ABLE{LCOUNT}
			SIF RESULT
				CSTR:実行可能コマンド = %CSTR:実行可能コマンド%押し倒し%TRAINNAME:LCOUNT%/
			TEQUIP:押し倒し = 0
		ENDSELECT

	ENDSELECT
NEXT

;PRINTFORMW %CSTR:実行可能コマンド%

;底上げ終了
PALAM:Ｖ潤 -= 3000
PALAM:Ａ潤 -= 3000

;具現を元に戻す
SIF STATE("具現", TARGET)
	CALL REMOVE_STATE, TARGET, "具現"
SIF STATE("具現", PLAYER)
	CALL REMOVE_STATE, PLAYER, "具現"

EQUIP:ステート変化 = MEMO_EQUIP1
EQUIP:PLAYER:ステート変化 = MEMO_EQUIP1_PLAYER
TEQUIP:押し倒し = MEMO_TEQUIP30
TARGET = MEMO_TARGET

ITEM:ペニバン = MEMO_ITEM


;-------------------------------------------------
;コマンドARGSをキャラARGが実行できるかを参照し、実行可能なら１を返す。だめなら０
;-------------------------------------------------
@CANTRAIN(ARGS, ARG)
#FUNCTION

SIF ARG < 0
	RETURNF 0
SIF ARG == 0 && TARGET > 0
	ARG = TARGET

LOCALS = /%ARGS%/

RETURNF STRCOUNT(CSTR:ARG:実行可能コマンド, LOCALS)


;-------------------------------------------------
;@CANTRAINの複数版
;コマンドARGSをキャラARG:0〜ARG:2が実行できるかを参照し、実行可能な人数を返す
;ARG:Xが0の時にTARGET:X > 0ならばTARGET:Xを代入する…ようはTARGET:0〜TARGET:2について調べるときにはARGは0で良い
;-------------------------------------------------
@CANTRAINS(ARGS, ARG, ARG:1, ARG:2)
#FUNCTION
#DIM LCOUNT

SIF ARG < 0
	RETURNF 0

LOCALS = /%ARGS%/

LOCAL = 0

FOR LCOUNT, 0, 3
	SIF ARG:LCOUNT == 0 && TARGET:LCOUNT > 0
		ARG:LCOUNT = TARGET:LCOUNT

	SIF ARG:LCOUNT > 0
		LOCAL += STRCOUNT(CSTR:(ARG:LCOUNT):実行可能コマンド, LOCALS)
NEXT

RETURNF LOCAL
