@SAVEGAME_EX, ARG
#DIMS SAVEINFO_EX
#DIM CHOICE
#DIM MEMO_DATANO
#DIM MEMO_LINECOUNT

MEMO_LINECOUNT = LINECOUNT
PRINTL 

$REDRAW_SAVEDATA
REDRAW 0

SIF LASTLOAD_NO >= 0
	CALL PRINT_STRL, @"現在は_黄色_{LASTLOAD_NO, 2}番_のデータをロードしてプレイしています。"
PRINTL 何番にセーブしますか？
CALL PRINT_SAVEDATA, ARG

PRINTL [100] 戻る

$INPUT_DATANUM
INPUT

SELECTCASE RESULT
CASE 100
	;バージョンチェックをON
	FLAG:VER_UPチェック = 1
	REDRAW 1
	RETURN 1
CASE 101 TO 105
	ARG = RESULT - 101
	CLEARLINE LINECOUNT - MEMO_LINECOUNT
	RESTART
CASE 0 TO 98
	CHOICE = RESULT
	CHKDATA CHOICE
	;元のSAVEGAMEではRESULT == 0のとき以外は確認をとらない
	IF RESULT == 0
		PRINTL 既にデータが存在します。上書きしますか？
		PRINTLC [0] はい
		PRINTLC [1] いいえ
		PRINTL 

		$YESNO_INPUT_LOOP
		INPUT

		IF RESULT == 1
			GOTO REDRAW_SAVEDATA
		ELSEIF RESULT != 0
			CLEARLINE 1
			REUSELASTLINE 無効な値です
			GOTO YESNO_INPUT_LOOP
		ENDIF
	ENDIF

	;バージョンチェックを初期化
	FLAG:VER_UPチェック = 0
	FLAG:ロード時台詞 = 0
	REDRAW 1

	SAVEINFO_EX = %GETTIMES_CUSTOM()% %SAVEINFO_MESSAGE()%
	SAVEDATA CHOICE, SAVEINFO_EX

	LOADGLOBAL
	GLOBAL:最新ＳＬ番号 = CHOICE
	SAVEGLOBAL

	FLAG:VER_UPチェック = 1
	FLAG:ロード時台詞 = 1
	RETURN 1
ENDSELECT

CLEARLINE 1
REUSELASTLINE 無効な値です
GOTO INPUT_DATANUM

@LOADGAME_EX, ARG
#DIM CHOICE
#DIM MEMO_LINECOUNT

MEMO_LINECOUNT = LINECOUNT
PRINTL 

$REDRAW_SAVEDATA
REDRAW 0

SIF LASTLOAD_NO >= 0
	CALL PRINT_STRL, @"現在は_黄色_{LASTLOAD_NO, 2}番_のデータをロードしてプレイしています。"
PRINTPLAIN 何番をロードしますか？下部は直近のセーブデータで、[99]はオートセーブです
PRINTL 
CALL PRINT_SAVEDATA, ARG

CHKDATA 99
PRINTFORML  [99] %RESULTS:0%
PRINTL [100] 戻る

$INPUT_DATANUM
INPUT

SELECTCASE RESULT
CASE 100
	REDRAW 1
	RETURN 1
CASE 101 TO 105
	ARG = RESULT - 101
	CLEARLINE LINECOUNT - MEMO_LINECOUNT
	RESTART
CASE 0 TO 99
	CHOICE = RESULT
	CHKDATA CHOICE
	;RESULT == 0ならロード可能
	IF RESULT != 0
		PRINTVL CHOICE
		PRINTL データがありません
		GOTO REDRAW_SAVEDATA
	ENDIF
	REDRAW 1

	LOADGLOBAL
	GLOBAL:最新ＳＬ番号 = CHOICE
	SAVEGLOBAL

	LOADDATA CHOICE

	RETURN 1
ENDSELECT

CLEARLINE 1
REUSELASTLINE 無効な値です
GOTO INPUT_DATANUM

@PRINT_SAVEDATA, ARG
#DIM LCOUNT
#DIM LCOUNT2
#DIM LCOUNT3
#DIM NUM_SHOWLATEST
#DIM NO_SAVETIME, 100
#DIM SAVETIME_VALUE, 100
#DIM MEMO_LINECOUNT
#DIMS SHOW_FILTER

VARSET NO_SAVETIME, 99
VARSET SAVETIME_VALUE
VARSET LOCAL

NUM_SHOWLATEST = 10
;直近のセーブデータをNUM_SHOWLATEST個表示させる
FOR LCOUNT, 0, 99
	CHKDATA LCOUNT
	SAVETIME_VALUE:LCOUNT = REGET_TIME(RESULTS)

	FOR LCOUNT2, 0, NUM_SHOWLATEST
		SIF SAVETIME_VALUE:LCOUNT < SAVETIME_VALUE:(NO_SAVETIME:LCOUNT2)
			CONTINUE

		FOR LCOUNT3, 1, NUM_SHOWLATEST
			SIF NUM_SHOWLATEST - LCOUNT3 == LCOUNT2
				BREAK
			NO_SAVETIME:(NUM_SHOWLATEST - LCOUNT3) = NO_SAVETIME:(NUM_SHOWLATEST - LCOUNT3 - 1)
		NEXT

		NO_SAVETIME:LCOUNT2 = LCOUNT
		BREAK
	NEXT
NEXT

FOR LCOUNT, 0, 20
	SELECTCASE LCOUNT + ARG*20
	CASE IS >= 99
		PRINTFORML 
	CASEELSE
		CHKDATA LCOUNT + ARG*20
		PRINTFORML  [{LCOUNT + ARG*20, 2}] %RESULTS%
	ENDSELECT
NEXT
PRINTL 

SETCOLOR DEF_COLOR("緑")
MEMO_LINECOUNT = LINECOUNT
FOR LCOUNT, 0, NUM_SHOWLATEST
	SIF SAVETIME_VALUE:(NO_SAVETIME:LCOUNT) == 0
		BREAK

	CHKDATA NO_SAVETIME:LCOUNT
	PRINTFORML  [{NO_SAVETIME:LCOUNT, 2}] %RESULTS%
	SETCOLOR DEF_COLOR("水色")
NEXT
SIF LINECOUNT > MEMO_LINECOUNT
	PRINTL 
RESETCOLOR
PRINT  
VARSET SHOW_FILTER
SIF ARG == 0
	SHOW_FILTER += "黄色/"
SHOW_FILTER += "　１　_101/"
SIF ARG == 1
	SHOW_FILTER += "黄色/"
SHOW_FILTER += "　２　_102/"
SIF ARG == 2
	SHOW_FILTER += "黄色/"
SHOW_FILTER += "　３　_103/"
SIF ARG == 3
	SHOW_FILTER += "黄色/"
SHOW_FILTER += "　４　_104/"
SIF ARG == 4
	SHOW_FILTER += "黄色/"
SHOW_FILTER += "　５　_105/"
CALL PRINT_LIST, SHOW_FILTER
PRINTL 

RETURN


;セーブデータの文字列ARGSから記録された年月日時間に対応した数字を返させる
;値が大きいほど新しい
@REGET_TIME(ARGS)
#FUNCTION
#DIM LCOUNT

VARSET LOCALS
FOR LCOUNT, 0, 5
	LOCALS += @"%SUBSTRING(ARGS, LCOUNT*3, 2)%"
NEXT
RETURNF TOINT(LOCALS)


@GETTIMES_CUSTOM()
#FUNCTIONS
#DIMS TIMEINFO
;カスタム時間表示の例
;年。下二桁のみに簡略化…つまり２桁固定でいい
TIMEINFO = {(GETTIME() / 10000000000000) % 100}
;月
LOCAL = (GETTIME() / 100000000000) % 100
TIMEINFO = %TIMEINFO%/\@ LOCAL < 10 ? 0 # \@{LOCAL}
;日
LOCAL = (GETTIME() / 1000000000) % 100
TIMEINFO = %TIMEINFO%/\@ LOCAL < 10 ? 0 # \@{LOCAL}
;時
LOCAL = ((GETTIME() / 10000000) % 100) % 24
TIMEINFO = %TIMEINFO% \@ LOCAL < 10 ? 0 # \@{LOCAL}
;分
LOCAL = (GETTIME() / 100000) % 100
TIMEINFO = %TIMEINFO%:\@ LOCAL < 10 ? 0 # \@{LOCAL}

RETURNF TIMEINFO

@SAVEINFO_MESSAGE()
#FUNCTIONS
#DIMS SAVEINFO
#DIM LCOUNT
#DIM CHOICE

SAVEINFO = {DAY}日%TEXTS("季節詳細")%(%TEXTS("曜日")%)%TEXTS("時間")%

;SELECTCASE MONEY
;CASE IS >= 100000000
;	SAVEINFO = %SAVEINFO%億万長者
;CASE IS >= 100000
;	SAVEINFO = %SAVEINFO% %TEXT_RJ(@"\${MONEY/10000}万", 7)%
;CASEELSE
;	SAVEINFO = %SAVEINFO% %TEXT_RJ(MONEY_C(MONEY), 7)%
;ENDSELECT
IF TARGET
	SAVEINFO = %SAVEINFO% %NAME:TARGET%
	IF TALENT:相思相愛
		SAVEINFO = %SAVEINFO%相
	ELSEIF TALENT:恋慕
		SAVEINFO = %SAVEINFO%恋
	ENDIF
	SIF TALENT:淫乱
		SAVEINFO = %SAVEINFO%淫
	SIF CFLAG:睡眠
		SAVEINFO = %SAVEINFO%眠
ENDIF

SAVEINFO = %SAVEINFO% {CHARANUM-1}人
IF CHARANUM-1 >= 3
	SAVEINFO += "("
	;優先順位上位4名を表示する
	FOR LCOUNT, 2, 6
		CHOICE = FINDCHARA(CFLAG:優先順位, LCOUNT, 2)
		SIF CHOICE <= 0
			BREAK
		SELECTCASE LCOUNT
		CASE 5
			SAVEINFO += ",…"
			BREAK
		CASE IS > 2
			SAVEINFO += ","
		ENDSELECT

		SAVEINFO = %SAVEINFO%%CONDS("短縮名", CHOICE)%
	NEXT
	SAVEINFO += ")"
ENDIF

SAVEINFO = %SAVEINFO% %VERS_eraAkumaMaid()%

SIF FLAG:周回数
	SAVEINFO = %SAVEINFO% {FLAG:周回数 + 1}周目

RETURNF SAVEINFO

@TITLE_LOADGAME
;タイトル画面のロードでも独自のロード画面を使う場合、@TITLE_LOADGAMEを定義する
;@TITLE_LOADGAMEが定義されていると、標準のロード画面の代わりにTITLE_LOADGAMEが呼ばれる。
CALL LOADGAME_EX
RETURN
;RETURNするとタイトルへ戻る。

;オートセーブの処理を独自に行う場合、@SYSTEM_AUTOSAVEを定義する
;@SYSTEM_AUTOSAVEが定義されていると、標準のオートセーブの代わりにSYSTEM_AUTOSAVEが呼ばれる。
;(@SYSTEM_AUTOSAVEを定義し何もしないでRETURNすればオートセーブを禁止できる。その場合はLOADDATA_EXから99番のデータに関する記述を削除しておくと親切)
@SYSTEM_AUTOSAVE
#DIMS SAVEINFO_EX
SAVEINFO_EX = %GETTIMES_CUSTOM()% %SAVEINFO_MESSAGE()%
SAVEDATA 99, SAVEINFO_EX

@EVENTLOAD
#PRI

